{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/chunk-ba834eff.js","webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-action-sheet-controller_8.entry.js"],"names":["__webpack_require__","d","__webpack_exports__","createColorClasses","getClassMap","hostContext","openURL","tslib__WEBPACK_IMPORTED_MODULE_0__","_this","undefined","selector","el","closest","color","_a","length","ion-color","getClassList","classes","array","Array","isArray","split","filter","c","map","trim","forEach","SCHEME","url","ev","direction","router","this","label","test","document","querySelector","preventDefault","componentOnReady","sent","push","r","ActionSheetController","AlertController","Anchor","LoadingController","ModalController","PickerController","PopoverController","ToastController","_chunk_84f6bf13_js__WEBPACK_IMPORTED_MODULE_1__","_chunk_d83bfeae_js__WEBPACK_IMPORTED_MODULE_3__","_chunk_ba834eff_js__WEBPACK_IMPORTED_MODULE_4__","hostRef","Object","prototype","create","options","dismiss","data","role","id","getTop","routerDirection","onClick","href","componentDidLoad","console","warn","render","mode","attrs","rel","class","assign","defineProperty","get","enumerable","configurable"],"mappings":"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","file":"js/chunk-94d94cb8.8036940b.js","sourcesContent":["var _this = this;\nimport * as tslib_1 from \"tslib\";\nvar hostContext = function (selector, el) {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nvar createColorClasses = function (color) {\n    var _a;\n    return (typeof color === 'string' && color.length > 0) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : undefined;\n};\nvar getClassList = function (classes) {\n    if (classes !== undefined) {\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(function (c) { return c != null; })\n            .map(function (c) { return c.trim(); })\n            .filter(function (c) { return c !== ''; });\n    }\n    return [];\n};\nvar getClassMap = function (classes) {\n    var map = {};\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\n    return map;\n};\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nvar openURL = function (url, ev, direction) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n    var router;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) return [3 /*break*/, 2];\n                router = document.querySelector('ion-router');\n                if (!router) return [3 /*break*/, 2];\n                if (ev != null) {\n                    ev.preventDefault();\n                }\n                return [4 /*yield*/, router.componentOnReady()];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, router.push(url, direction)];\n            case 2: return [2 /*return*/, false];\n        }\n    });\n}); };\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import * as tslib_1 from \"tslib\";\nimport { r as registerInstance, d as getIonMode, h, H as Host } from './chunk-84f6bf13.js';\nimport './chunk-1074393c.js';\nimport { g as createOverlay, h as dismissOverlay, j as getOverlay } from './chunk-d83bfeae.js';\nimport { o as openURL, c as createColorClasses } from './chunk-ba834eff.js';\nvar ActionSheetController = /** @class */ (function () {\n    function ActionSheetController(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create an action sheet overlay with action sheet options.\n     *\n     * @param options The options to use to create the action sheet.\n     */\n    ActionSheetController.prototype.create = function (options) {\n        return createOverlay('ion-action-sheet', options);\n    };\n    /**\n     * Dismiss the open action sheet overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the action sheet.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the action sheet.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the action sheet to dismiss. If an id is not provided, it will dismiss the most recently opened action sheet.\n     */\n    ActionSheetController.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-action-sheet', id);\n    };\n    /**\n     * Get the most recently opened action sheet overlay.\n     */\n    ActionSheetController.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-action-sheet')];\n            });\n        });\n    };\n    return ActionSheetController;\n}());\nvar AlertController = /** @class */ (function () {\n    function AlertController(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create an alert overlay with alert options.\n     *\n     * @param options The options to use to create the alert.\n     */\n    AlertController.prototype.create = function (options) {\n        return createOverlay('ion-alert', options);\n    };\n    /**\n     * Dismiss the open alert overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the alert.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the alert.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the alert to dismiss. If an id is not provided, it will dismiss the most recently opened alert.\n     */\n    AlertController.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-alert', id);\n    };\n    /**\n     * Get the most recently opened alert overlay.\n     */\n    AlertController.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-alert')];\n            });\n        });\n    };\n    return AlertController;\n}());\n/**\n * @deprecated Use `ion-router-link` instead.\n */\nvar Anchor = /** @class */ (function () {\n    function Anchor(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = function (ev) {\n            openURL(_this.href, ev, _this.routerDirection);\n        };\n    }\n    Anchor.prototype.componentDidLoad = function () {\n        console.warn('The <ion-anchor> component has been deprecated. Please use an <ion-router-link> if you are using a vanilla JS or Stencil project or an <a> with the Angular router.');\n    };\n    Anchor.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        var attrs = {\n            href: this.href,\n            rel: this.rel\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign({}, createColorClasses(this.color), (_a = {}, _a[mode] = true, _a['ion-activatable'] = true, _a)) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    };\n    Object.defineProperty(Anchor, \"style\", {\n        get: function () { return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Anchor;\n}());\nvar LoadingController = /** @class */ (function () {\n    function LoadingController(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a loading overlay with loading options.\n     *\n     * @param options The options to use to create the loading.\n     */\n    LoadingController.prototype.create = function (options) {\n        return createOverlay('ion-loading', options);\n    };\n    /**\n     * Dismiss the open loading overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the loading.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the loading.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the loading to dismiss. If an id is not provided, it will dismiss the most recently opened loading.\n     */\n    LoadingController.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-loading', id);\n    };\n    /**\n     * Get the most recently opened loading overlay.\n     */\n    LoadingController.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-loading')];\n            });\n        });\n    };\n    return LoadingController;\n}());\nvar ModalController = /** @class */ (function () {\n    function ModalController(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a modal overlay with modal options.\n     *\n     * @param options The options to use to create the modal.\n     */\n    ModalController.prototype.create = function (options) {\n        return createOverlay('ion-modal', options);\n    };\n    /**\n     * Dismiss the open modal overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the modal.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the modal.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the modal to dismiss. If an id is not provided, it will dismiss the most recently opened modal.\n     */\n    ModalController.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-modal', id);\n    };\n    /**\n     * Get the most recently opened modal overlay.\n     */\n    ModalController.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-modal')];\n            });\n        });\n    };\n    return ModalController;\n}());\nvar PickerController = /** @class */ (function () {\n    function PickerController(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a picker overlay with picker options.\n     *\n     * @param options The options to use to create the picker.\n     */\n    PickerController.prototype.create = function (options) {\n        return createOverlay('ion-picker', options);\n    };\n    /**\n     * Dismiss the open picker overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the picker.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the picker.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the picker to dismiss. If an id is not provided, it will dismiss the most recently opened picker.\n     */\n    PickerController.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-picker', id);\n    };\n    /**\n     * Get the most recently opened picker overlay.\n     */\n    PickerController.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-picker')];\n            });\n        });\n    };\n    return PickerController;\n}());\nvar PopoverController = /** @class */ (function () {\n    function PopoverController(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a popover overlay with popover options.\n     *\n     * @param options The options to use to create the popover.\n     */\n    PopoverController.prototype.create = function (options) {\n        return createOverlay('ion-popover', options);\n    };\n    /**\n     * Dismiss the open popover overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the popover.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the popover.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the popover to dismiss. If an id is not provided, it will dismiss the most recently opened popover.\n     */\n    PopoverController.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-popover', id);\n    };\n    /**\n     * Get the most recently opened popover overlay.\n     */\n    PopoverController.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-popover')];\n            });\n        });\n    };\n    return PopoverController;\n}());\nvar ToastController = /** @class */ (function () {\n    function ToastController(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a toast overlay with toast options.\n     *\n     * @param options The options to use to create the toast.\n     */\n    ToastController.prototype.create = function (options) {\n        return createOverlay('ion-toast', options);\n    };\n    /**\n     * Dismiss the open toast overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the toast. For example, 'cancel' or 'backdrop'.\n     * @param id The id of the toast to dismiss. If an id is not provided, it will dismiss the most recently opened toast.\n     */\n    ToastController.prototype.dismiss = function (data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-toast', id);\n    };\n    /**\n     * Get the most recently opened toast overlay.\n     */\n    ToastController.prototype.getTop = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, getOverlay(document, 'ion-toast')];\n            });\n        });\n    };\n    return ToastController;\n}());\nexport { ActionSheetController as ion_action_sheet_controller, AlertController as ion_alert_controller, Anchor as ion_anchor, LoadingController as ion_loading_controller, ModalController as ion_modal_controller, PickerController as ion_picker_controller, PopoverController as ion_popover_controller, ToastController as ion_toast_controller };\n"],"sourceRoot":""}