{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/swipe-back-ab1fb115.js","webpack:///./node_modules/@ionic/core/dist/esm-es5/index-8421816f.js"],"names":["__webpack_require__","r","__webpack_exports__","d","createSwipeBackGesture","_index_8421816f_js__WEBPACK_IMPORTED_MODULE_2__","el","canStartHandler","onStartHandler","onMoveHandler","onEndHandler","win","ownerDocument","defaultView","canStart","detail","startX","onMove","delta","deltaX","stepValue","innerWidth","onEnd","width","velocity","velocityX","z","shouldComplete","missing","missingDistance","realDur","dur","Math","abs","min","Object","gestureName","gesturePriority","threshold","onStart","GESTURE_CONTROLLER","createGesture","_sPassive","_chunk_84f6bf13_js__WEBPACK_IMPORTED_MODULE_0__","GestureController","this","gestureId","requestedStart","Map","disabledGestures","disabledScroll","Set","prototype","config","GestureDelegate","newID","name","priority","disableScroll","createBlocker","opts","BlockerDelegate","disable","start","id","set","delete","capture","maxPriority","forEach","value","max","capturedId","clear","event","CustomEvent","document","dispatchEvent","release","undefined","disableGesture","get","add","enableGesture","size","body","classList","BACKDROP_NO_SCROLL","enableScroll","remove","isDisabled","isCaptured","isScrollDisabled","disabled","ctrl","captured","destroy","block","_i","_a","length","gesture","unblock","addEventListener","eventName","callback","listenerOpts","supportsPassive","passive","node","defineProperty","e","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","Date","now","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","setDisabled","Document","createPanRecognizer","direction","thresh","maxAngle","radians","PI","isDirX","maxCosine","cos","startY","dirty","isPan","x","y","detect","deltaY","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","onWillStart","notCaptured","type","startTimeStamp","currentX","currentY","velocityY","timeStamp","data","pan","updateDetail","tryToCapturePan","calcGestureData","fireOnMove","abortGesture","then","fireOnStart","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","timestamp","timeDelta","changedTouches","touch","clientX","clientY","pageX","pageY"],"mappings":"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","file":"js/chunk-61da3db4.3767c1d6.js","sourcesContent":["import './chunk-84f6bf13.js';\nimport './chunk-1074393c.js';\nimport { createGesture } from './index-8421816f.js';\nvar createSwipeBackGesture = function (el, canStartHandler, onStartHandler, onMoveHandler, onEndHandler) {\n    var win = el.ownerDocument.defaultView;\n    var canStart = function (detail) {\n        return detail.startX <= 50 && canStartHandler();\n    };\n    var onMove = function (detail) {\n        // set the transition animation's progress\n        var delta = detail.deltaX;\n        var stepValue = delta / win.innerWidth;\n        onMoveHandler(stepValue);\n    };\n    var onEnd = function (detail) {\n        // the swipe back gesture has ended\n        var delta = detail.deltaX;\n        var width = win.innerWidth;\n        var stepValue = delta / width;\n        var velocity = detail.velocityX;\n        var z = width / 2.0;\n        var shouldComplete = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        var missing = shouldComplete ? 1 - stepValue : stepValue;\n        var missingDistance = missing * width;\n        var realDur = 0;\n        if (missingDistance > 5) {\n            var dur = missingDistance / Math.abs(velocity);\n            realDur = Math.min(dur, 300);\n        }\n        onEndHandler(shouldComplete, stepValue, realDur);\n    };\n    return createGesture({\n        el: el,\n        gestureName: 'goback-swipe',\n        gesturePriority: 40,\n        threshold: 10,\n        canStart: canStart,\n        onStart: onStartHandler,\n        onMove: onMove,\n        onEnd: onEnd\n    });\n};\nexport { createSwipeBackGesture };\n","import { w as writeTask } from './chunk-84f6bf13.js';\nimport './chunk-1074393c.js';\nvar GestureController = /** @class */ (function () {\n    function GestureController() {\n        this.gestureId = 0;\n        this.requestedStart = new Map();\n        this.disabledGestures = new Map();\n        this.disabledScroll = new Set();\n    }\n    /**\n     * Creates a gesture delegate based on the GestureConfig passed\n     */\n    GestureController.prototype.createGesture = function (config) {\n        return new GestureDelegate(this, this.newID(), config.name, config.priority || 0, !!config.disableScroll);\n    };\n    /**\n     * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n     */\n    GestureController.prototype.createBlocker = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n    };\n    GestureController.prototype.start = function (gestureName, id, priority) {\n        if (!this.canStart(gestureName)) {\n            this.requestedStart.delete(id);\n            return false;\n        }\n        this.requestedStart.set(id, priority);\n        return true;\n    };\n    GestureController.prototype.capture = function (gestureName, id, priority) {\n        if (!this.start(gestureName, id, priority)) {\n            return false;\n        }\n        var requestedStart = this.requestedStart;\n        var maxPriority = -10000;\n        requestedStart.forEach(function (value) {\n            maxPriority = Math.max(maxPriority, value);\n        });\n        if (maxPriority === priority) {\n            this.capturedId = id;\n            requestedStart.clear();\n            var event = new CustomEvent('ionGestureCaptured', { detail: { gestureName: gestureName } });\n            document.dispatchEvent(event);\n            return true;\n        }\n        requestedStart.delete(id);\n        return false;\n    };\n    GestureController.prototype.release = function (id) {\n        this.requestedStart.delete(id);\n        if (this.capturedId === id) {\n            this.capturedId = undefined;\n        }\n    };\n    GestureController.prototype.disableGesture = function (gestureName, id) {\n        var set = this.disabledGestures.get(gestureName);\n        if (set === undefined) {\n            set = new Set();\n            this.disabledGestures.set(gestureName, set);\n        }\n        set.add(id);\n    };\n    GestureController.prototype.enableGesture = function (gestureName, id) {\n        var set = this.disabledGestures.get(gestureName);\n        if (set !== undefined) {\n            set.delete(id);\n        }\n    };\n    GestureController.prototype.disableScroll = function (id) {\n        this.disabledScroll.add(id);\n        if (this.disabledScroll.size === 1) {\n            document.body.classList.add(BACKDROP_NO_SCROLL);\n        }\n    };\n    GestureController.prototype.enableScroll = function (id) {\n        this.disabledScroll.delete(id);\n        if (this.disabledScroll.size === 0) {\n            document.body.classList.remove(BACKDROP_NO_SCROLL);\n        }\n    };\n    GestureController.prototype.canStart = function (gestureName) {\n        if (this.capturedId !== undefined) {\n            // a gesture already captured\n            return false;\n        }\n        if (this.isDisabled(gestureName)) {\n            return false;\n        }\n        return true;\n    };\n    GestureController.prototype.isCaptured = function () {\n        return this.capturedId !== undefined;\n    };\n    GestureController.prototype.isScrollDisabled = function () {\n        return this.disabledScroll.size > 0;\n    };\n    GestureController.prototype.isDisabled = function (gestureName) {\n        var disabled = this.disabledGestures.get(gestureName);\n        if (disabled && disabled.size > 0) {\n            return true;\n        }\n        return false;\n    };\n    GestureController.prototype.newID = function () {\n        this.gestureId++;\n        return this.gestureId;\n    };\n    return GestureController;\n}());\nvar GestureDelegate = /** @class */ (function () {\n    function GestureDelegate(ctrl, id, name, priority, disableScroll) {\n        this.id = id;\n        this.name = name;\n        this.disableScroll = disableScroll;\n        this.priority = priority * 1000000 + id;\n        this.ctrl = ctrl;\n    }\n    GestureDelegate.prototype.canStart = function () {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.canStart(this.name);\n    };\n    GestureDelegate.prototype.start = function () {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.start(this.name, this.id, this.priority);\n    };\n    GestureDelegate.prototype.capture = function () {\n        if (!this.ctrl) {\n            return false;\n        }\n        var captured = this.ctrl.capture(this.name, this.id, this.priority);\n        if (captured && this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n        return captured;\n    };\n    GestureDelegate.prototype.release = function () {\n        if (this.ctrl) {\n            this.ctrl.release(this.id);\n            if (this.disableScroll) {\n                this.ctrl.enableScroll(this.id);\n            }\n        }\n    };\n    GestureDelegate.prototype.destroy = function () {\n        this.release();\n        this.ctrl = undefined;\n    };\n    return GestureDelegate;\n}());\nvar BlockerDelegate = /** @class */ (function () {\n    function BlockerDelegate(ctrl, id, disable, disableScroll) {\n        this.id = id;\n        this.disable = disable;\n        this.disableScroll = disableScroll;\n        this.ctrl = ctrl;\n    }\n    BlockerDelegate.prototype.block = function () {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (var _i = 0, _a = this.disable; _i < _a.length; _i++) {\n                var gesture = _a[_i];\n                this.ctrl.disableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n    };\n    BlockerDelegate.prototype.unblock = function () {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (var _i = 0, _a = this.disable; _i < _a.length; _i++) {\n                var gesture = _a[_i];\n                this.ctrl.enableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.enableScroll(this.id);\n        }\n    };\n    BlockerDelegate.prototype.destroy = function () {\n        this.unblock();\n        this.ctrl = undefined;\n    };\n    return BlockerDelegate;\n}());\nvar BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nvar GESTURE_CONTROLLER = new GestureController();\nvar addEventListener = function (el, eventName, callback, opts) {\n    // use event listener options when supported\n    // otherwise it's just a boolean for the \"capture\" arg\n    var listenerOpts = supportsPassive(el) ? {\n        'capture': !!opts.capture,\n        'passive': !!opts.passive,\n    } : !!opts.capture;\n    var add;\n    var remove;\n    if (el['__zone_symbol__addEventListener']) {\n        add = '__zone_symbol__addEventListener';\n        remove = '__zone_symbol__removeEventListener';\n    }\n    else {\n        add = 'addEventListener';\n        remove = 'removeEventListener';\n    }\n    el[add](eventName, callback, listenerOpts);\n    return function () {\n        el[remove](eventName, callback, listenerOpts);\n    };\n};\nvar supportsPassive = function (node) {\n    if (_sPassive === undefined) {\n        try {\n            var opts = Object.defineProperty({}, 'passive', {\n                get: function () {\n                    _sPassive = true;\n                }\n            });\n            node.addEventListener('optsTest', function () { return; }, opts);\n        }\n        catch (e) {\n            _sPassive = false;\n        }\n    }\n    return !!_sPassive;\n};\nvar _sPassive;\nvar MOUSE_WAIT = 2000;\nvar createPointerEvents = function (el, pointerDown, pointerMove, pointerUp, options) {\n    var rmTouchStart;\n    var rmTouchMove;\n    var rmTouchEnd;\n    var rmTouchCancel;\n    var rmMouseStart;\n    var rmMouseMove;\n    var rmMouseUp;\n    var lastTouchEvent = 0;\n    var handleTouchStart = function (ev) {\n        lastTouchEvent = Date.now() + MOUSE_WAIT;\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmTouchMove && pointerMove) {\n            rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n        }\n        if (!rmTouchEnd) {\n            rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\n        }\n        if (!rmTouchCancel) {\n            rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\n        }\n    };\n    var handleMouseDown = function (ev) {\n        if (lastTouchEvent > Date.now()) {\n            return;\n        }\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmMouseMove && pointerMove) {\n            rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n        }\n        if (!rmMouseUp) {\n            rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n        }\n    };\n    var handleTouchEnd = function (ev) {\n        stopTouch();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    var handleMouseUp = function (ev) {\n        stopMouse();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    var stopTouch = function () {\n        if (rmTouchMove) {\n            rmTouchMove();\n        }\n        if (rmTouchEnd) {\n            rmTouchEnd();\n        }\n        if (rmTouchCancel) {\n            rmTouchCancel();\n        }\n        rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n    };\n    var stopMouse = function () {\n        if (rmMouseMove) {\n            rmMouseMove();\n        }\n        if (rmMouseUp) {\n            rmMouseUp();\n        }\n        rmMouseMove = rmMouseUp = undefined;\n    };\n    var stop = function () {\n        stopTouch();\n        stopMouse();\n    };\n    var setDisabled = function (disabled) {\n        if (disabled) {\n            if (rmTouchStart) {\n                rmTouchStart();\n            }\n            if (rmMouseStart) {\n                rmMouseStart();\n            }\n            rmTouchStart = rmMouseStart = undefined;\n            stop();\n        }\n        else {\n            if (!rmTouchStart) {\n                rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n            }\n            if (!rmMouseStart) {\n                rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n            }\n        }\n    };\n    var destroy = function () {\n        setDisabled(true);\n        pointerUp = pointerMove = pointerDown = undefined;\n    };\n    return {\n        setDisabled: setDisabled,\n        stop: stop,\n        destroy: destroy\n    };\n};\nvar getDocument = function (node) {\n    return node instanceof Document ? node : node.ownerDocument;\n};\nvar createPanRecognizer = function (direction, thresh, maxAngle) {\n    var radians = maxAngle * (Math.PI / 180);\n    var isDirX = direction === 'x';\n    var maxCosine = Math.cos(radians);\n    var threshold = thresh * thresh;\n    var startX = 0;\n    var startY = 0;\n    var dirty = false;\n    var isPan = 0;\n    return {\n        start: function (x, y) {\n            startX = x;\n            startY = y;\n            isPan = 0;\n            dirty = true;\n        },\n        detect: function (x, y) {\n            if (!dirty) {\n                return false;\n            }\n            var deltaX = (x - startX);\n            var deltaY = (y - startY);\n            var distance = deltaX * deltaX + deltaY * deltaY;\n            if (distance < threshold) {\n                return false;\n            }\n            var hypotenuse = Math.sqrt(distance);\n            var cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n            if (cosine > maxCosine) {\n                isPan = 1;\n            }\n            else if (cosine < -maxCosine) {\n                isPan = -1;\n            }\n            else {\n                isPan = 0;\n            }\n            dirty = false;\n            return true;\n        },\n        isGesture: function () {\n            return isPan !== 0;\n        },\n        getDirection: function () {\n            return isPan;\n        }\n    };\n};\nvar createGesture = function (config) {\n    var hasCapturedPan = false;\n    var hasStartedPan = false;\n    var hasFiredStart = true;\n    var isMoveQueued = false;\n    var finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n    var canStart = finalConfig.canStart;\n    var onWillStart = finalConfig.onWillStart;\n    var onStart = finalConfig.onStart;\n    var onEnd = finalConfig.onEnd;\n    var notCaptured = finalConfig.notCaptured;\n    var onMove = finalConfig.onMove;\n    var threshold = finalConfig.threshold;\n    var detail = {\n        type: 'pan',\n        startX: 0,\n        startY: 0,\n        startTimeStamp: 0,\n        currentX: 0,\n        currentY: 0,\n        velocityX: 0,\n        velocityY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        timeStamp: 0,\n        event: undefined,\n        data: undefined\n    };\n    var pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n    var gesture = GESTURE_CONTROLLER.createGesture({\n        name: config.gestureName,\n        priority: config.gesturePriority,\n        disableScroll: config.disableScroll\n    });\n    var pointerDown = function (ev) {\n        var timeStamp = now(ev);\n        if (hasStartedPan || !hasFiredStart) {\n            return false;\n        }\n        updateDetail(ev, detail);\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTimeStamp = detail.timeStamp = timeStamp;\n        detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n        detail.event = ev;\n        // Check if gesture can start\n        if (canStart && canStart(detail) === false) {\n            return false;\n        }\n        // Release fallback\n        gesture.release();\n        // Start gesture\n        if (!gesture.start()) {\n            return false;\n        }\n        hasStartedPan = true;\n        if (threshold === 0) {\n            return tryToCapturePan();\n        }\n        pan.start(detail.startX, detail.startY);\n        return true;\n    };\n    var pointerMove = function (ev) {\n        // fast path, if gesture is currently captured\n        // do minimum job to get user-land even dispatched\n        if (hasCapturedPan) {\n            if (!isMoveQueued && hasFiredStart) {\n                isMoveQueued = true;\n                calcGestureData(detail, ev);\n                writeTask(fireOnMove);\n            }\n            return;\n        }\n        // gesture is currently being detected\n        calcGestureData(detail, ev);\n        if (pan.detect(detail.currentX, detail.currentY)) {\n            if (!pan.isGesture() || !tryToCapturePan()) {\n                abortGesture();\n            }\n        }\n    };\n    var fireOnMove = function () {\n        // Since fireOnMove is called inside a RAF, onEnd() might be called,\n        // we must double check hasCapturedPan\n        if (!hasCapturedPan) {\n            return;\n        }\n        isMoveQueued = false;\n        if (onMove) {\n            onMove(detail);\n        }\n    };\n    var tryToCapturePan = function () {\n        if (gesture && !gesture.capture()) {\n            return false;\n        }\n        hasCapturedPan = true;\n        hasFiredStart = false;\n        // reset start position since the real user-land event starts here\n        // If the pan detector threshold is big, not resetting the start position\n        // will cause a jump in the animation equal to the detector threshold.\n        // the array of positions used to calculate the gesture velocity does not\n        // need to be cleaned, more points in the positions array always results in a\n        // more accurate value of the velocity.\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTimeStamp = detail.timeStamp;\n        if (onWillStart) {\n            onWillStart(detail).then(fireOnStart);\n        }\n        else {\n            fireOnStart();\n        }\n        return true;\n    };\n    var fireOnStart = function () {\n        if (onStart) {\n            onStart(detail);\n        }\n        hasFiredStart = true;\n    };\n    var reset = function () {\n        hasCapturedPan = false;\n        hasStartedPan = false;\n        isMoveQueued = false;\n        hasFiredStart = true;\n        gesture.release();\n    };\n    // END *************************\n    var pointerUp = function (ev) {\n        var tmpHasCaptured = hasCapturedPan;\n        var tmpHasFiredStart = hasFiredStart;\n        reset();\n        if (!tmpHasFiredStart) {\n            return;\n        }\n        calcGestureData(detail, ev);\n        // Try to capture press\n        if (tmpHasCaptured) {\n            if (onEnd) {\n                onEnd(detail);\n            }\n            return;\n        }\n        // Not captured any event\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    var pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n        capture: false,\n    });\n    var abortGesture = function () {\n        reset();\n        pointerEvents.stop();\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    return {\n        setDisabled: function (disabled) {\n            if (disabled && hasCapturedPan) {\n                pointerUp(undefined);\n            }\n            pointerEvents.setDisabled(disabled);\n        },\n        destroy: function () {\n            gesture.destroy();\n            pointerEvents.destroy();\n        }\n    };\n};\nvar calcGestureData = function (detail, ev) {\n    if (!ev) {\n        return;\n    }\n    var prevX = detail.currentX;\n    var prevY = detail.currentY;\n    var prevT = detail.timeStamp;\n    updateDetail(ev, detail);\n    var currentX = detail.currentX;\n    var currentY = detail.currentY;\n    var timestamp = detail.timeStamp = now(ev);\n    var timeDelta = timestamp - prevT;\n    if (timeDelta > 0 && timeDelta < 100) {\n        var velocityX = (currentX - prevX) / timeDelta;\n        var velocityY = (currentY - prevY) / timeDelta;\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n    }\n    detail.deltaX = currentX - detail.startX;\n    detail.deltaY = currentY - detail.startY;\n    detail.event = ev;\n};\nvar updateDetail = function (ev, detail) {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    var x = 0;\n    var y = 0;\n    if (ev) {\n        var changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            var touch = changedTouches[0];\n            x = touch.clientX;\n            y = touch.clientY;\n        }\n        else if (ev.pageX !== undefined) {\n            x = ev.pageX;\n            y = ev.pageY;\n        }\n    }\n    detail.currentX = x;\n    detail.currentY = y;\n};\nvar now = function (ev) {\n    return ev.timeStamp || Date.now();\n};\nexport { GESTURE_CONTROLLER, createGesture };\n"],"sourceRoot":""}