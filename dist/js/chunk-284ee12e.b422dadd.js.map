{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-input-ios.entry.js","webpack:///./node_modules/@ionic/core/dist/esm-es5/chunk-ba834eff.js","webpack:///./node_modules/@ionic/core/dist/esm-es5/chunk-c90aaa66.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Input","tslib__WEBPACK_IMPORTED_MODULE_0__","_chunk_84f6bf13_js__WEBPACK_IMPORTED_MODULE_1__","_chunk_ba834eff_js__WEBPACK_IMPORTED_MODULE_3__","_chunk_c90aaa66_js__WEBPACK_IMPORTED_MODULE_4__","hostRef","_this","this","Object","inputId","inputIds","didBlurAfterEdit","hasFocus","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","debounce","disabled","name","readonly","required","spellcheck","type","value","onInput","ev","input","target","ionInput","emit","onBlur","focusChanged","emitStyle","ionBlur","onFocus","ionFocus","onKeydown","clearOnEdit","hasValue","clearTextInput","preventDefault","stopPropagation","nativeInput","ionChange","ionInputDidLoad","ionInputDidUnload","ionStyle","prototype","debounceChanged","disabledChanged","valueChanged","componentWillLoad","undefined","componentDidLoad","componentDidUnload","setFocus","_a","focus","getInputElement","Promise","resolve","getValue","interactive","has-placeholder","placeholder","has-value","has-focus","interactive-disabled","length","hostData","mode","aria-disabled","class","assign","color","__stencil_render","labelId","label","el","id","ref","aria-labelledby","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","inputMode","inputmode","min","max","minLength","minlength","maxLength","maxlength","multiple","pattern","readOnly","spellCheck","step","size","onKeyDown","tabindex","onTouchStart","onMouseDown","defineProperty","get","enumerable","configurable","render","createColorClasses","getClassMap","hostContext","openURL","selector","closest","ion-color","getClassList","classes","array","Array","isArray","split","filter","c","map","trim","forEach","SCHEME","url","direction","router","test","document","querySelector","componentOnReady","sent","push","rIC","assert","clamp","debounceEvent","findItemLabel","hasShadowDom","isEndSide","now","pointerCoord","renderHiddenInput","callback","window","requestIdleCallback","setTimeout","shadowRoot","attachShadow","componentEl","itemEl","always","container","ownerDocument","createElement","classList","add","appendChild","n","Math","actual","reason","message","console","error","Error","timeStamp","Date","changedTouches","touch","x","clientX","y","clientY","pageX","pageY","side","isRTL","dir","event","wait","original","_original","bind","func","timer","args","_i","arguments","clearTimeout","apply","concat"],"mappings":"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","file":"js/chunk-284ee12e.b422dadd.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './chunk-84f6bf13.js';\nimport './chunk-1074393c.js';\nimport { c as createColorClasses } from './chunk-ba834eff.js';\nimport { d as debounceEvent, f as findItemLabel } from './chunk-c90aaa66.js';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nvar Input = /** @class */ (function () {\n    function Input(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.inputId = \"ion-input-\" + inputIds++;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'off';\n        /**\n         * Indicates whether the value of the control can be automatically completed by the browser.\n         */\n        this.autocomplete = 'off';\n        /**\n         * Whether auto correction should be enabled when the user is entering/editing the text value.\n         */\n        this.autocorrect = 'off';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n         */\n        this.clearInput = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the input.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * The type of control to display. The default type is text.\n         */\n        this.type = 'text';\n        /**\n         * The value of the input.\n         */\n        this.value = '';\n        this.onInput = function (ev) {\n            var input = ev.target;\n            if (input) {\n                _this.value = input.value || '';\n            }\n            _this.ionInput.emit(ev);\n        };\n        this.onBlur = function () {\n            _this.hasFocus = false;\n            _this.focusChanged();\n            _this.emitStyle();\n            _this.ionBlur.emit();\n        };\n        this.onFocus = function () {\n            _this.hasFocus = true;\n            _this.focusChanged();\n            _this.emitStyle();\n            _this.ionFocus.emit();\n        };\n        this.onKeydown = function () {\n            if (_this.clearOnEdit) {\n                // Did the input value change after it was blurred and edited?\n                if (_this.didBlurAfterEdit && _this.hasValue()) {\n                    // Clear the input\n                    _this.clearTextInput();\n                }\n                // Reset the flag\n                _this.didBlurAfterEdit = false;\n            }\n        };\n        this.clearTextInput = function (ev) {\n            if (_this.clearInput && !_this.readonly && !_this.disabled && ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n            _this.value = '';\n            /**\n             * This is needed for clearOnEdit\n             * Otherwise the value will not be cleared\n             * if user is inside the input\n             */\n            if (_this.nativeInput) {\n                _this.nativeInput.value = '';\n            }\n        };\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionInputDidLoad = createEvent(this, \"ionInputDidLoad\", 7);\n        this.ionInputDidUnload = createEvent(this, \"ionInputDidUnload\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    Input.prototype.debounceChanged = function () {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    };\n    Input.prototype.disabledChanged = function () {\n        this.emitStyle();\n    };\n    /**\n     * Update the native input element when the value changes\n     */\n    Input.prototype.valueChanged = function () {\n        this.emitStyle();\n        this.ionChange.emit({ value: this.value });\n    };\n    Input.prototype.componentWillLoad = function () {\n        // By default, password inputs clear after focus when they have content\n        if (this.clearOnEdit === undefined && this.type === 'password') {\n            this.clearOnEdit = true;\n        }\n        this.emitStyle();\n    };\n    Input.prototype.componentDidLoad = function () {\n        this.debounceChanged();\n        this.ionInputDidLoad.emit();\n    };\n    Input.prototype.componentDidUnload = function () {\n        this.ionInputDidUnload.emit();\n    };\n    /**\n     * Sets focus on the specified `ion-input`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    Input.prototype.setFocus = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (this.nativeInput) {\n                    this.nativeInput.focus();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Returns the native `<input>` element used under the hood.\n     */\n    Input.prototype.getInputElement = function () {\n        return Promise.resolve(this.nativeInput);\n    };\n    Input.prototype.getValue = function () {\n        return this.value || '';\n    };\n    Input.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'interactive': true,\n            'input': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus,\n            'interactive-disabled': this.disabled,\n        });\n    };\n    Input.prototype.focusChanged = function () {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n    };\n    Input.prototype.hasValue = function () {\n        return this.getValue().length > 0;\n    };\n    Input.prototype.hostData = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return {\n            'aria-disabled': this.disabled ? 'true' : null,\n            class: Object.assign({}, createColorClasses(this.color), (_a = {}, _a[mode] = true, _a['has-value'] = this.hasValue(), _a['has-focus'] = this.hasFocus, _a))\n        };\n    };\n    Input.prototype.__stencil_render = function () {\n        var _this = this;\n        var value = this.getValue();\n        var labelId = this.inputId + '-lbl';\n        var label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return [\n            h(\"input\", { class: \"native-input\", ref: function (input) { return _this.nativeInput = input; }, \"aria-labelledby\": labelId, disabled: this.disabled, accept: this.accept, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, step: this.step, size: this.size, type: this.type, value: value, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown }),\n            (this.clearInput && !this.readonly && !this.disabled) && h(\"button\", { type: \"button\", class: \"input-clear-icon\", tabindex: \"-1\", onTouchStart: this.clearTextInput, onMouseDown: this.clearTextInput })\n        ];\n    };\n    Object.defineProperty(Input.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Input, \"watchers\", {\n        get: function () {\n            return {\n                \"debounce\": [\"debounceChanged\"],\n                \"disabled\": [\"disabledChanged\"],\n                \"value\": [\"valueChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Input.prototype.render = function () { return h(Host, this.hostData(), this.__stencil_render()); };\n    Object.defineProperty(Input, \"style\", {\n        get: function () { return \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0!important;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label), ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios, [dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios, [dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:50%;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.has-focus.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios, .has-focus.sc-ion-input-ios-h button.sc-ion-input-ios, .has-focus.sc-ion-input-ios-h input.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-floating.sc-ion-input-ios-h, .item-label-floating .sc-ion-input-ios-h, .item-label-stacked.sc-ion-input-ios-h, .item-label-stacked .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20viewBox=\\'0%200%20512%20512\\'><path%20fill=\\'var(--ion-color-step-600,%20%23666666)\\'%20d=\\'M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z\\'/></svg>\\\");width:30px;height:30px;background-size:18px}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Input;\n}());\nvar inputIds = 0;\nexport { Input as ion_input };\n","var _this = this;\nimport * as tslib_1 from \"tslib\";\nvar hostContext = function (selector, el) {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nvar createColorClasses = function (color) {\n    var _a;\n    return (typeof color === 'string' && color.length > 0) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : undefined;\n};\nvar getClassList = function (classes) {\n    if (classes !== undefined) {\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(function (c) { return c != null; })\n            .map(function (c) { return c.trim(); })\n            .filter(function (c) { return c !== ''; });\n    }\n    return [];\n};\nvar getClassMap = function (classes) {\n    var map = {};\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\n    return map;\n};\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nvar openURL = function (url, ev, direction) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n    var router;\n    return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) return [3 /*break*/, 2];\n                router = document.querySelector('ion-router');\n                if (!router) return [3 /*break*/, 2];\n                if (ev != null) {\n                    ev.preventDefault();\n                }\n                return [4 /*yield*/, router.componentOnReady()];\n            case 1:\n                _a.sent();\n                return [2 /*return*/, router.push(url, direction)];\n            case 2: return [2 /*return*/, false];\n        }\n    });\n}); };\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","var rIC = function (callback) {\n    if ('requestIdleCallback' in window) {\n        window.requestIdleCallback(callback);\n    }\n    else {\n        setTimeout(callback, 32);\n    }\n};\nvar hasShadowDom = function (el) {\n    return !!el.shadowRoot && !!el.attachShadow;\n};\nvar findItemLabel = function (componentEl) {\n    var itemEl = componentEl.closest('ion-item');\n    if (itemEl) {\n        return itemEl.querySelector('ion-label');\n    }\n    return null;\n};\nvar renderHiddenInput = function (always, container, name, value, disabled) {\n    if (always || hasShadowDom(container)) {\n        var input = container.querySelector('input.aux-input');\n        if (!input) {\n            input = container.ownerDocument.createElement('input');\n            input.type = 'hidden';\n            input.classList.add('aux-input');\n            container.appendChild(input);\n        }\n        input.disabled = disabled;\n        input.name = name;\n        input.value = value || '';\n    }\n};\nvar clamp = function (min, n, max) {\n    return Math.max(min, Math.min(n, max));\n};\nvar assert = function (actual, reason) {\n    if (!actual) {\n        var message = 'ASSERT: ' + reason;\n        console.error(message);\n        debugger; // tslint:disable-line\n        throw new Error(message);\n    }\n};\nvar now = function (ev) {\n    return ev.timeStamp || Date.now();\n};\nvar pointerCoord = function (ev) {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    if (ev) {\n        var changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            var touch = changedTouches[0];\n            return { x: touch.clientX, y: touch.clientY };\n        }\n        if (ev.pageX !== undefined) {\n            return { x: ev.pageX, y: ev.pageY };\n        }\n    }\n    return { x: 0, y: 0 };\n};\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\nvar isEndSide = function (side) {\n    var isRTL = document.dir === 'rtl';\n    switch (side) {\n        case 'start': return isRTL;\n        case 'end': return !isRTL;\n        default:\n            throw new Error(\"\\\"\" + side + \"\\\" is not a valid value for [side]. Use \\\"start\\\" or \\\"end\\\" instead.\");\n    }\n};\nvar debounceEvent = function (event, wait) {\n    var original = event._original || event;\n    return {\n        _original: event,\n        emit: debounce(original.emit.bind(original), wait)\n    };\n};\nvar debounce = function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timer;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timer);\n        timer = setTimeout.apply(void 0, [func, wait].concat(args));\n    };\n};\nexport { rIC as a, assert as b, clamp as c, debounceEvent as d, debounce as e, findItemLabel as f, hasShadowDom as h, isEndSide as i, now as n, pointerCoord as p, renderHiddenInput as r };\n"],"sourceRoot":""}